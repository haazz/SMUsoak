plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	// For Rest-docs
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.smusoak'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	// For RestDocs
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 세팅
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 세팅
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springframework.boot:spring-boot-starter-mail:3.0.5'
    implementation 'org.slf4j:slf4j-api:2.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework:spring-tx:6.1.3'

	// @Valid 사용
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'

	// aws S3
	implementation("com.amazonaws:aws-java-sdk-s3:1.12.174")
	// Image Resize
	implementation 'net.coobird:thumbnailator:0.4.20'

	implementation 'org.springframework:spring-test:6.1.3'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// Rest-docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4)

	// JUnit5
	testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
	testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
}

tasks.named('test') {
	// For Rest-docs
	outputs.dir snippetsDir // (6)
	useJUnitPlatform()
}

// For Rest-docs
ext {
	snippetsDir = file('build/generated-snippets')
}

asciidoctor {
	configurations 'asciidoctorExt' // (7)
	baseDirFollowsSourceFile() // (8)
	inputs.dir(snippetsDir)  // (9)
	dependsOn test // (10)
}

asciidoctor.doFirst {
	// asciidoctor가 실행될 때 기존 파일들을 삭제
	delete file('src/main/resources/static/docs')  // (11)
}

task createDocument(type: Copy) { // (12)
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static")
}

bootJar {
	dependsOn createDocument
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}


